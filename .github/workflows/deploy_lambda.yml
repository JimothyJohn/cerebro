name: Deploy Lambda Function

on:
  push:
    branches:
      - master  # or any other branch you want to trigger the deployment

jobs:
  deploy:
    runs-on: debian-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'  # Specify the Python version you need

    - name: Install pipenv
      run: pip install -U pipenv

    - name: Format Python files
      run: |
        pushd lambda/ > /dev/null
        black .
        popd > /dev/null

    - name: Install Dependencies
      run: |
        pushd lambda/ > /dev/null
        pipenv install -q
        popd > /dev/null

    - name: Run Tests
      run: |
        pushd lambda/ > /dev/null
        pipenv run pytest
        popd > /dev/null

    - name: Prepare Deployment Package
      run: |
        pushd lambda/ > /dev/null
        PIPENV_VENV=$(pipenv --venv)
        popd > /dev/null

        BUILD_DIR="build/"
        rm -rf "${BUILD_DIR}"
        mkdir "${BUILD_DIR}"

        cp -r "${PIPENV_VENV}/lib" "${BUILD_DIR}/"
        cp -r lambda/src/*.py "${BUILD_DIR}/"

        rm -f deployment_package.zip
        pushd "${BUILD_DIR}"  > /dev/null
        zip -qr ../deployment_package.zip .
        popd > /dev/null

    - name: Deploy to AWS Lambda
      run: |
        aws lambda update-function-code --function-name cerebro --zip-file fileb://deployment_package.zip | \
        jq .LastUpdateStatusReason
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: 'your-aws-region'  # specify your AWS region

    - name: Clean up
      run: rm -rf "build/" deployment_package.zip
